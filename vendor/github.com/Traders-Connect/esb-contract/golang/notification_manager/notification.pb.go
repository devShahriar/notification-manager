// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v4.23.4
// source: proto/notification-manager/notification.proto

package notification_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	// account
	EventType_ACCOUNT_ADDED            EventType = 0
	EventType_ACCOUNT_ENABLED          EventType = 1
	EventType_ACCOUNT_DISABLED         EventType = 2
	EventType_ACCOUNT_DELETED          EventType = 3
	EventType_ACCOUNT_CONNECTION_ERROR EventType = 4
	EventType_ACCOUNT_CONNECTED        EventType = 5
	// copier
	EventType_COPIER_CREATED  EventType = 6
	EventType_COPIER_ENABLED  EventType = 7
	EventType_COPIER_DISABLED EventType = 8
	EventType_COPIER_MODIFIED EventType = 9
	EventType_COPIER_DELETED  EventType = 10
	// trade
	EventType_TRADE_COPIED_SUCCESSFULLY   EventType = 11
	EventType_TRADE_MODIFIED_SUCCESSFULLY EventType = 12
	EventType_TRADE_COPY_FAILURE          EventType = 13
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "ACCOUNT_ADDED",
		1:  "ACCOUNT_ENABLED",
		2:  "ACCOUNT_DISABLED",
		3:  "ACCOUNT_DELETED",
		4:  "ACCOUNT_CONNECTION_ERROR",
		5:  "ACCOUNT_CONNECTED",
		6:  "COPIER_CREATED",
		7:  "COPIER_ENABLED",
		8:  "COPIER_DISABLED",
		9:  "COPIER_MODIFIED",
		10: "COPIER_DELETED",
		11: "TRADE_COPIED_SUCCESSFULLY",
		12: "TRADE_MODIFIED_SUCCESSFULLY",
		13: "TRADE_COPY_FAILURE",
	}
	EventType_value = map[string]int32{
		"ACCOUNT_ADDED":               0,
		"ACCOUNT_ENABLED":             1,
		"ACCOUNT_DISABLED":            2,
		"ACCOUNT_DELETED":             3,
		"ACCOUNT_CONNECTION_ERROR":    4,
		"ACCOUNT_CONNECTED":           5,
		"COPIER_CREATED":              6,
		"COPIER_ENABLED":              7,
		"COPIER_DISABLED":             8,
		"COPIER_MODIFIED":             9,
		"COPIER_DELETED":              10,
		"TRADE_COPIED_SUCCESSFULLY":   11,
		"TRADE_MODIFIED_SUCCESSFULLY": 12,
		"TRADE_COPY_FAILURE":          13,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notification_manager_notification_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_notification_manager_notification_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{0}
}

type NotificationDataKeys int32

const (
	NotificationDataKeys_FIRST_NAME           NotificationDataKeys = 0
	NotificationDataKeys_ACCOUNT_NUMBER       NotificationDataKeys = 1
	NotificationDataKeys_ACCOUNT_NAME         NotificationDataKeys = 2
	NotificationDataKeys_CONNECTION_STATUS    NotificationDataKeys = 3
	NotificationDataKeys_CONNECTION_ERROR     NotificationDataKeys = 4
	NotificationDataKeys_COPIER_MASTER        NotificationDataKeys = 5
	NotificationDataKeys_COPIER_SLAVE         NotificationDataKeys = 6
	NotificationDataKeys_COPIER_TYPE          NotificationDataKeys = 7
	NotificationDataKeys_COPIER_RISK          NotificationDataKeys = 8
	NotificationDataKeys_COPIER_MASTER_TICKET NotificationDataKeys = 9
	NotificationDataKeys_COPIER_SLAVE_TICKET  NotificationDataKeys = 10
	NotificationDataKeys_COPIER_MASTER_SYMBOL NotificationDataKeys = 11
	NotificationDataKeys_COPIER_SLAVE_SYMBOL  NotificationDataKeys = 12
	NotificationDataKeys_COPIER_ERROR         NotificationDataKeys = 13
	NotificationDataKeys_ACTION_TYPE          NotificationDataKeys = 14
)

// Enum value maps for NotificationDataKeys.
var (
	NotificationDataKeys_name = map[int32]string{
		0:  "FIRST_NAME",
		1:  "ACCOUNT_NUMBER",
		2:  "ACCOUNT_NAME",
		3:  "CONNECTION_STATUS",
		4:  "CONNECTION_ERROR",
		5:  "COPIER_MASTER",
		6:  "COPIER_SLAVE",
		7:  "COPIER_TYPE",
		8:  "COPIER_RISK",
		9:  "COPIER_MASTER_TICKET",
		10: "COPIER_SLAVE_TICKET",
		11: "COPIER_MASTER_SYMBOL",
		12: "COPIER_SLAVE_SYMBOL",
		13: "COPIER_ERROR",
		14: "ACTION_TYPE",
	}
	NotificationDataKeys_value = map[string]int32{
		"FIRST_NAME":           0,
		"ACCOUNT_NUMBER":       1,
		"ACCOUNT_NAME":         2,
		"CONNECTION_STATUS":    3,
		"CONNECTION_ERROR":     4,
		"COPIER_MASTER":        5,
		"COPIER_SLAVE":         6,
		"COPIER_TYPE":          7,
		"COPIER_RISK":          8,
		"COPIER_MASTER_TICKET": 9,
		"COPIER_SLAVE_TICKET":  10,
		"COPIER_MASTER_SYMBOL": 11,
		"COPIER_SLAVE_SYMBOL":  12,
		"COPIER_ERROR":         13,
		"ACTION_TYPE":          14,
	}
)

func (x NotificationDataKeys) Enum() *NotificationDataKeys {
	p := new(NotificationDataKeys)
	*p = x
	return p
}

func (x NotificationDataKeys) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationDataKeys) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notification_manager_notification_proto_enumTypes[1].Descriptor()
}

func (NotificationDataKeys) Type() protoreflect.EnumType {
	return &file_proto_notification_manager_notification_proto_enumTypes[1]
}

func (x NotificationDataKeys) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationDataKeys.Descriptor instead.
func (NotificationDataKeys) EnumDescriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{1}
}

type NotificationType int32

const (
	NotificationType_EMAIL    NotificationType = 0
	NotificationType_TELEGRAM NotificationType = 1
	NotificationType_DISCORD  NotificationType = 2
	NotificationType_SLACK    NotificationType = 3
	NotificationType_WHATSAPP NotificationType = 4
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "EMAIL",
		1: "TELEGRAM",
		2: "DISCORD",
		3: "SLACK",
		4: "WHATSAPP",
	}
	NotificationType_value = map[string]int32{
		"EMAIL":    0,
		"TELEGRAM": 1,
		"DISCORD":  2,
		"SLACK":    3,
		"WHATSAPP": 4,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_notification_manager_notification_proto_enumTypes[2].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_proto_notification_manager_notification_proto_enumTypes[2]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{2}
}

type UninstallIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationType NotificationType `protobuf:"varint,2,opt,name=notification_type,json=notificationType,proto3,enum=notificationmanager.NotificationType" json:"notification_type,omitempty"`
}

func (x *UninstallIntegrationReq) Reset() {
	*x = UninstallIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallIntegrationReq) ProtoMessage() {}

func (x *UninstallIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallIntegrationReq.ProtoReflect.Descriptor instead.
func (*UninstallIntegrationReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{0}
}

func (x *UninstallIntegrationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UninstallIntegrationReq) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_EMAIL
}

type UninstallIntegrationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UninstallIntegrationReply) Reset() {
	*x = UninstallIntegrationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UninstallIntegrationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UninstallIntegrationReply) ProtoMessage() {}

func (x *UninstallIntegrationReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UninstallIntegrationReply.ProtoReflect.Descriptor instead.
func (*UninstallIntegrationReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{1}
}

type EditConfigStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationConfigId uint64 `protobuf:"varint,2,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
	Enabled              bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EventType            string `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *EditConfigStatusReq) Reset() {
	*x = EditConfigStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditConfigStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditConfigStatusReq) ProtoMessage() {}

func (x *EditConfigStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditConfigStatusReq.ProtoReflect.Descriptor instead.
func (*EditConfigStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{2}
}

func (x *EditConfigStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditConfigStatusReq) GetNotificationConfigId() uint64 {
	if x != nil {
		return x.NotificationConfigId
	}
	return 0
}

func (x *EditConfigStatusReq) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EditConfigStatusReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type ConfigDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationId uint64 `protobuf:"varint,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	EventType      string `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *ConfigDetailsReq) Reset() {
	*x = ConfigDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetailsReq) ProtoMessage() {}

func (x *ConfigDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetailsReq.ProtoReflect.Descriptor instead.
func (*ConfigDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigDetailsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfigDetailsReq) GetNotificationId() uint64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *ConfigDetailsReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type ConfigDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockList          []*AccountMeta      `protobuf:"bytes,1,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`
	EnabledList        []*AccountMeta      `protobuf:"bytes,2,rep,name=enabled_list,json=enabledList,proto3" json:"enabled_list,omitempty"`
	NotificationConfig *NotificationConfig `protobuf:"bytes,3,opt,name=notification_config,json=notificationConfig,proto3" json:"notification_config,omitempty"`
}

func (x *ConfigDetailsReply) Reset() {
	*x = ConfigDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigDetailsReply) ProtoMessage() {}

func (x *ConfigDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigDetailsReply.ProtoReflect.Descriptor instead.
func (*ConfigDetailsReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigDetailsReply) GetBlockList() []*AccountMeta {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *ConfigDetailsReply) GetEnabledList() []*AccountMeta {
	if x != nil {
		return x.EnabledList
	}
	return nil
}

func (x *ConfigDetailsReply) GetNotificationConfig() *NotificationConfig {
	if x != nil {
		return x.NotificationConfig
	}
	return nil
}

type EditConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BlockList          []*AccountMeta      `protobuf:"bytes,2,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`
	UnblockList        []*AccountMeta      `protobuf:"bytes,3,rep,name=unblock_list,json=unblockList,proto3" json:"unblock_list,omitempty"`
	NotificationConfig *NotificationConfig `protobuf:"bytes,4,opt,name=notification_config,json=notificationConfig,proto3" json:"notification_config,omitempty"`
}

func (x *EditConfigReq) Reset() {
	*x = EditConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditConfigReq) ProtoMessage() {}

func (x *EditConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditConfigReq.ProtoReflect.Descriptor instead.
func (*EditConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{5}
}

func (x *EditConfigReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditConfigReq) GetBlockList() []*AccountMeta {
	if x != nil {
		return x.BlockList
	}
	return nil
}

func (x *EditConfigReq) GetUnblockList() []*AccountMeta {
	if x != nil {
		return x.UnblockList
	}
	return nil
}

func (x *EditConfigReq) GetNotificationConfig() *NotificationConfig {
	if x != nil {
		return x.NotificationConfig
	}
	return nil
}

type AccountMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId       string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountName     string `protobuf:"bytes,2,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`
	AccountConfigId uint64 `protobuf:"varint,3,opt,name=account_config_id,json=accountConfigId,proto3" json:"account_config_id,omitempty"`
}

func (x *AccountMeta) Reset() {
	*x = AccountMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMeta) ProtoMessage() {}

func (x *AccountMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMeta.ProtoReflect.Descriptor instead.
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{6}
}

func (x *AccountMeta) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountMeta) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AccountMeta) GetAccountConfigId() uint64 {
	if x != nil {
		return x.AccountConfigId
	}
	return 0
}

type NotificationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	EventType string            `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UserId    string            `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *NotificationReq) Reset() {
	*x = NotificationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationReq) ProtoMessage() {}

func (x *NotificationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationReq.ProtoReflect.Descriptor instead.
func (*NotificationReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationReq) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *NotificationReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *NotificationReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NotificationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string          `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DefaultEmail string          `protobuf:"bytes,2,opt,name=default_email,json=defaultEmail,proto3" json:"default_email,omitempty"`
	AccountMeta  *AccountMetaReq `protobuf:"bytes,3,opt,name=account_meta,json=accountMeta,proto3" json:"account_meta,omitempty"`
	FirstName    string          `protobuf:"bytes,4,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
}

func (x *UserMetaReq) Reset() {
	*x = UserMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMetaReq) ProtoMessage() {}

func (x *UserMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMetaReq.ProtoReflect.Descriptor instead.
func (*UserMetaReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{8}
}

func (x *UserMetaReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserMetaReq) GetDefaultEmail() string {
	if x != nil {
		return x.DefaultEmail
	}
	return ""
}

func (x *UserMetaReq) GetAccountMeta() *AccountMetaReq {
	if x != nil {
		return x.AccountMeta
	}
	return nil
}

func (x *UserMetaReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

type AccountMetaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Nickname  string `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *AccountMetaReq) Reset() {
	*x = AccountMetaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountMetaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMetaReq) ProtoMessage() {}

func (x *AccountMetaReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMetaReq.ProtoReflect.Descriptor instead.
func (*AccountMetaReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{9}
}

func (x *AccountMetaReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccountMetaReq) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountMetaReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AccountMetaReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type UserConfigResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DefaultEmail        string                `protobuf:"bytes,2,opt,name=default_email,json=defaultEmail,proto3" json:"default_email,omitempty"`
	NotificationConfigs []*NotificationConfig `protobuf:"bytes,3,rep,name=NotificationConfigs,proto3" json:"NotificationConfigs,omitempty"`
}

func (x *UserConfigResp) Reset() {
	*x = UserConfigResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserConfigResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfigResp) ProtoMessage() {}

func (x *UserConfigResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfigResp.ProtoReflect.Descriptor instead.
func (*UserConfigResp) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{10}
}

func (x *UserConfigResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserConfigResp) GetDefaultEmail() string {
	if x != nil {
		return x.DefaultEmail
	}
	return ""
}

func (x *UserConfigResp) GetNotificationConfigs() []*NotificationConfig {
	if x != nil {
		return x.NotificationConfigs
	}
	return nil
}

type NotificationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventType            string `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	NotificationType     string `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Enabled              bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	MessageTemplate      string `protobuf:"bytes,5,opt,name=message_template,json=messageTemplate,proto3" json:"message_template,omitempty"`
	Subject              string `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	UserConfig           uint64 `protobuf:"varint,7,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	NotificationConfigId uint64 `protobuf:"varint,8,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
}

func (x *NotificationConfig) Reset() {
	*x = NotificationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationConfig) ProtoMessage() {}

func (x *NotificationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationConfig.ProtoReflect.Descriptor instead.
func (*NotificationConfig) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{11}
}

func (x *NotificationConfig) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NotificationConfig) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *NotificationConfig) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *NotificationConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NotificationConfig) GetMessageTemplate() string {
	if x != nil {
		return x.MessageTemplate
	}
	return ""
}

func (x *NotificationConfig) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *NotificationConfig) GetUserConfig() uint64 {
	if x != nil {
		return x.UserConfig
	}
	return 0
}

func (x *NotificationConfig) GetNotificationConfigId() uint64 {
	if x != nil {
		return x.NotificationConfigId
	}
	return 0
}

type ConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DefaultEmail string `protobuf:"bytes,2,opt,name=default_email,json=defaultEmail,proto3" json:"default_email,omitempty"`
}

func (x *ConfigReq) Reset() {
	*x = ConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReq) ProtoMessage() {}

func (x *ConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReq.ProtoReflect.Descriptor instead.
func (*ConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConfigReq) GetDefaultEmail() string {
	if x != nil {
		return x.DefaultEmail
	}
	return ""
}

type DeleteConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationConfigId uint64 `protobuf:"varint,2,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
	UserConfigId         uint64 `protobuf:"varint,3,opt,name=user_config_id,json=userConfigId,proto3" json:"user_config_id,omitempty"`
}

func (x *DeleteConfigReq) Reset() {
	*x = DeleteConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigReq) ProtoMessage() {}

func (x *DeleteConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigReq.ProtoReflect.Descriptor instead.
func (*DeleteConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteConfigReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteConfigReq) GetNotificationConfigId() uint64 {
	if x != nil {
		return x.NotificationConfigId
	}
	return 0
}

func (x *DeleteConfigReq) GetUserConfigId() uint64 {
	if x != nil {
		return x.UserConfigId
	}
	return 0
}

type IntegrationStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IntegrationStatusReq) Reset() {
	*x = IntegrationStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationStatusReq) ProtoMessage() {}

func (x *IntegrationStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationStatusReq.ProtoReflect.Descriptor instead.
func (*IntegrationStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{14}
}

func (x *IntegrationStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type IntegrationStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmailEnabled    bool   `protobuf:"varint,2,opt,name=email_enabled,json=emailEnabled,proto3" json:"email_enabled,omitempty"`
	TelegramEnabled bool   `protobuf:"varint,3,opt,name=telegram_enabled,json=telegramEnabled,proto3" json:"telegram_enabled,omitempty"`
	DiscordEnabled  bool   `protobuf:"varint,4,opt,name=discord_enabled,json=discordEnabled,proto3" json:"discord_enabled,omitempty"`
	SlackEnabled    bool   `protobuf:"varint,5,opt,name=slack_enabled,json=slackEnabled,proto3" json:"slack_enabled,omitempty"`
	WhatsappEnabled bool   `protobuf:"varint,6,opt,name=whatsapp_enabled,json=whatsappEnabled,proto3" json:"whatsapp_enabled,omitempty"`
	DefaultEmail    string `protobuf:"bytes,7,opt,name=default_email,json=defaultEmail,proto3" json:"default_email,omitempty"`
}

func (x *IntegrationStatusReply) Reset() {
	*x = IntegrationStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationStatusReply) ProtoMessage() {}

func (x *IntegrationStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationStatusReply.ProtoReflect.Descriptor instead.
func (*IntegrationStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{15}
}

func (x *IntegrationStatusReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IntegrationStatusReply) GetEmailEnabled() bool {
	if x != nil {
		return x.EmailEnabled
	}
	return false
}

func (x *IntegrationStatusReply) GetTelegramEnabled() bool {
	if x != nil {
		return x.TelegramEnabled
	}
	return false
}

func (x *IntegrationStatusReply) GetDiscordEnabled() bool {
	if x != nil {
		return x.DiscordEnabled
	}
	return false
}

func (x *IntegrationStatusReply) GetSlackEnabled() bool {
	if x != nil {
		return x.SlackEnabled
	}
	return false
}

func (x *IntegrationStatusReply) GetWhatsappEnabled() bool {
	if x != nil {
		return x.WhatsappEnabled
	}
	return false
}

func (x *IntegrationStatusReply) GetDefaultEmail() string {
	if x != nil {
		return x.DefaultEmail
	}
	return ""
}

type InstallIntegrationReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName        string           `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	DefaultEmail     string           `protobuf:"bytes,3,opt,name=default_email,json=defaultEmail,proto3" json:"default_email,omitempty"`
	NotificationType NotificationType `protobuf:"varint,4,opt,name=notification_type,json=notificationType,proto3,enum=notificationmanager.NotificationType" json:"notification_type,omitempty"`
}

func (x *InstallIntegrationReq) Reset() {
	*x = InstallIntegrationReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallIntegrationReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallIntegrationReq) ProtoMessage() {}

func (x *InstallIntegrationReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallIntegrationReq.ProtoReflect.Descriptor instead.
func (*InstallIntegrationReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{16}
}

func (x *InstallIntegrationReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *InstallIntegrationReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *InstallIntegrationReq) GetDefaultEmail() string {
	if x != nil {
		return x.DefaultEmail
	}
	return ""
}

func (x *InstallIntegrationReq) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_EMAIL
}

type IntDeleteAccountConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string            `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	UserId    string            `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Data      map[string]string `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IntDeleteAccountConfigReq) Reset() {
	*x = IntDeleteAccountConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntDeleteAccountConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDeleteAccountConfigReq) ProtoMessage() {}

func (x *IntDeleteAccountConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntDeleteAccountConfigReq.ProtoReflect.Descriptor instead.
func (*IntDeleteAccountConfigReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{17}
}

func (x *IntDeleteAccountConfigReq) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *IntDeleteAccountConfigReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IntDeleteAccountConfigReq) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

// Telegram
type AddBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotName          string `protobuf:"bytes,2,opt,name=bot_name,json=botName,proto3" json:"bot_name,omitempty"`
	BotDescription   string `protobuf:"bytes,3,opt,name=bot_description,json=botDescription,proto3" json:"bot_description,omitempty"`
	BotToken         string `protobuf:"bytes,4,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
	NotificationType string `protobuf:"bytes,5,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
}

func (x *AddBotReq) Reset() {
	*x = AddBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBotReq) ProtoMessage() {}

func (x *AddBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBotReq.ProtoReflect.Descriptor instead.
func (*AddBotReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{18}
}

func (x *AddBotReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddBotReq) GetBotName() string {
	if x != nil {
		return x.BotName
	}
	return ""
}

func (x *AddBotReq) GetBotDescription() string {
	if x != nil {
		return x.BotDescription
	}
	return ""
}

func (x *AddBotReq) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

func (x *AddBotReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

type EditBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId    uint64 `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	BotName        string `protobuf:"bytes,3,opt,name=bot_name,json=botName,proto3" json:"bot_name,omitempty"`
	BotDescription string `protobuf:"bytes,4,opt,name=bot_description,json=botDescription,proto3" json:"bot_description,omitempty"`
	BotToken       string `protobuf:"bytes,5,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
}

func (x *EditBotReq) Reset() {
	*x = EditBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotReq) ProtoMessage() {}

func (x *EditBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotReq.ProtoReflect.Descriptor instead.
func (*EditBotReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{19}
}

func (x *EditBotReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditBotReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *EditBotReq) GetBotName() string {
	if x != nil {
		return x.BotName
	}
	return ""
}

func (x *EditBotReq) GetBotDescription() string {
	if x != nil {
		return x.BotDescription
	}
	return ""
}

func (x *EditBotReq) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

type GetBotsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NotificationType string `protobuf:"bytes,2,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
}

func (x *GetBotsReq) Reset() {
	*x = GetBotsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotsReq) ProtoMessage() {}

func (x *GetBotsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotsReq.ProtoReflect.Descriptor instead.
func (*GetBotsReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{20}
}

func (x *GetBotsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBotsReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

type EditBotStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId      uint64 `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationType string `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Enable           bool   `protobuf:"varint,4,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *EditBotStatusReq) Reset() {
	*x = EditBotStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotStatusReq) ProtoMessage() {}

func (x *EditBotStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotStatusReq.ProtoReflect.Descriptor instead.
func (*EditBotStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{21}
}

func (x *EditBotStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditBotStatusReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *EditBotStatusReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *EditBotStatusReq) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

type DeleteBotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId      uint64 `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationType string `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
}

func (x *DeleteBotReq) Reset() {
	*x = DeleteBotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBotReq) ProtoMessage() {}

func (x *DeleteBotReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBotReq.ProtoReflect.Descriptor instead.
func (*DeleteBotReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteBotReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteBotReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *DeleteBotReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

// TG channel
type AddChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelName        string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelDescription string `protobuf:"bytes,3,opt,name=channel_description,json=channelDescription,proto3" json:"channel_description,omitempty"`
	ChannelId          string `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *AddChannelReq) Reset() {
	*x = AddChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelReq) ProtoMessage() {}

func (x *AddChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelReq.ProtoReflect.Descriptor instead.
func (*AddChannelReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{23}
}

func (x *AddChannelReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddChannelReq) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *AddChannelReq) GetChannelDescription() string {
	if x != nil {
		return x.ChannelDescription
	}
	return ""
}

func (x *AddChannelReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type EditChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelConfigId    uint64 `protobuf:"varint,2,opt,name=channel_config_id,json=channelConfigId,proto3" json:"channel_config_id,omitempty"`
	ChannelName        string `protobuf:"bytes,3,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelDescription string `protobuf:"bytes,4,opt,name=channel_description,json=channelDescription,proto3" json:"channel_description,omitempty"`
	ChannelId          string `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *EditChannelReq) Reset() {
	*x = EditChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelReq) ProtoMessage() {}

func (x *EditChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelReq.ProtoReflect.Descriptor instead.
func (*EditChannelReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{24}
}

func (x *EditChannelReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditChannelReq) GetChannelConfigId() uint64 {
	if x != nil {
		return x.ChannelConfigId
	}
	return 0
}

func (x *EditChannelReq) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *EditChannelReq) GetChannelDescription() string {
	if x != nil {
		return x.ChannelDescription
	}
	return ""
}

func (x *EditChannelReq) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type GetChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetChannelReq) Reset() {
	*x = GetChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelReq) ProtoMessage() {}

func (x *GetChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelReq.ProtoReflect.Descriptor instead.
func (*GetChannelReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{25}
}

func (x *GetChannelReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteChannelReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelConfigId uint64 `protobuf:"varint,2,opt,name=channel_config_id,json=channelConfigId,proto3" json:"channel_config_id,omitempty"`
}

func (x *DeleteChannelReq) Reset() {
	*x = DeleteChannelReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelReq) ProtoMessage() {}

func (x *DeleteChannelReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelReq.ProtoReflect.Descriptor instead.
func (*DeleteChannelReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteChannelReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteChannelReq) GetChannelConfigId() uint64 {
	if x != nil {
		return x.ChannelConfigId
	}
	return 0
}

// TG Notification Config
type GetBotEventConfigsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId      uint64 `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationType string `protobuf:"bytes,3,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
}

func (x *GetBotEventConfigsReq) Reset() {
	*x = GetBotEventConfigsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotEventConfigsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotEventConfigsReq) ProtoMessage() {}

func (x *GetBotEventConfigsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotEventConfigsReq.ProtoReflect.Descriptor instead.
func (*GetBotEventConfigsReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{27}
}

func (x *GetBotEventConfigsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBotEventConfigsReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *GetBotEventConfigsReq) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

type GetBotEventDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId          uint64 `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationConfigId uint64 `protobuf:"varint,3,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
	EventType            string `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
}

func (x *GetBotEventDetailsReq) Reset() {
	*x = GetBotEventDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotEventDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotEventDetailsReq) ProtoMessage() {}

func (x *GetBotEventDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotEventDetailsReq.ProtoReflect.Descriptor instead.
func (*GetBotEventDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{28}
}

func (x *GetBotEventDetailsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBotEventDetailsReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *GetBotEventDetailsReq) GetNotificationConfigId() uint64 {
	if x != nil {
		return x.NotificationConfigId
	}
	return 0
}

func (x *GetBotEventDetailsReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

type EditBotEventDetailsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountBlockList   []*AccountMeta      `protobuf:"bytes,2,rep,name=account_block_list,json=accountBlockList,proto3" json:"account_block_list,omitempty"`
	AccountEnabledList []*AccountMeta      `protobuf:"bytes,3,rep,name=account_enabled_list,json=accountEnabledList,proto3" json:"account_enabled_list,omitempty"`
	ChannelBlockList   []*ChannelMeta      `protobuf:"bytes,4,rep,name=channel_block_list,json=channelBlockList,proto3" json:"channel_block_list,omitempty"`
	ChannelEnabledList []*ChannelMeta      `protobuf:"bytes,5,rep,name=channel_enabled_list,json=channelEnabledList,proto3" json:"channel_enabled_list,omitempty"`
	NotificationConfig *NotificationConfig `protobuf:"bytes,6,opt,name=notification_config,json=notificationConfig,proto3" json:"notification_config,omitempty"`
	BotConfigId        uint64              `protobuf:"varint,7,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
}

func (x *EditBotEventDetailsReq) Reset() {
	*x = EditBotEventDetailsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotEventDetailsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotEventDetailsReq) ProtoMessage() {}

func (x *EditBotEventDetailsReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotEventDetailsReq.ProtoReflect.Descriptor instead.
func (*EditBotEventDetailsReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{29}
}

func (x *EditBotEventDetailsReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditBotEventDetailsReq) GetAccountBlockList() []*AccountMeta {
	if x != nil {
		return x.AccountBlockList
	}
	return nil
}

func (x *EditBotEventDetailsReq) GetAccountEnabledList() []*AccountMeta {
	if x != nil {
		return x.AccountEnabledList
	}
	return nil
}

func (x *EditBotEventDetailsReq) GetChannelBlockList() []*ChannelMeta {
	if x != nil {
		return x.ChannelBlockList
	}
	return nil
}

func (x *EditBotEventDetailsReq) GetChannelEnabledList() []*ChannelMeta {
	if x != nil {
		return x.ChannelEnabledList
	}
	return nil
}

func (x *EditBotEventDetailsReq) GetNotificationConfig() *NotificationConfig {
	if x != nil {
		return x.NotificationConfig
	}
	return nil
}

func (x *EditBotEventDetailsReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

type ChannelMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelConfigId uint64 `protobuf:"varint,1,opt,name=channel_config_id,json=channelConfigId,proto3" json:"channel_config_id,omitempty"`
	ChannelName     string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
}

func (x *ChannelMeta) Reset() {
	*x = ChannelMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMeta) ProtoMessage() {}

func (x *ChannelMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMeta.ProtoReflect.Descriptor instead.
func (*ChannelMeta) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{30}
}

func (x *ChannelMeta) GetChannelConfigId() uint64 {
	if x != nil {
		return x.ChannelConfigId
	}
	return 0
}

func (x *ChannelMeta) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

type EditBotEventStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               string           `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId          uint64           `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationConfigId uint64           `protobuf:"varint,3,opt,name=notification_config_id,json=notificationConfigId,proto3" json:"notification_config_id,omitempty"`
	Enabled              bool             `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	EventType            string           `protobuf:"bytes,5,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	NotificationType     NotificationType `protobuf:"varint,6,opt,name=notification_type,json=notificationType,proto3,enum=notificationmanager.NotificationType" json:"notification_type,omitempty"`
}

func (x *EditBotEventStatusReq) Reset() {
	*x = EditBotEventStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotEventStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotEventStatusReq) ProtoMessage() {}

func (x *EditBotEventStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotEventStatusReq.ProtoReflect.Descriptor instead.
func (*EditBotEventStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{31}
}

func (x *EditBotEventStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditBotEventStatusReq) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *EditBotEventStatusReq) GetNotificationConfigId() uint64 {
	if x != nil {
		return x.NotificationConfigId
	}
	return 0
}

func (x *EditBotEventStatusReq) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *EditBotEventStatusReq) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EditBotEventStatusReq) GetNotificationType() NotificationType {
	if x != nil {
		return x.NotificationType
	}
	return NotificationType_EMAIL
}

type EditChannelStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ChannelConfigId uint64 `protobuf:"varint,2,opt,name=channel_config_id,json=channelConfigId,proto3" json:"channel_config_id,omitempty"`
	Enabled         bool   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *EditChannelStatusReq) Reset() {
	*x = EditChannelStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelStatusReq) ProtoMessage() {}

func (x *EditChannelStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelStatusReq.ProtoReflect.Descriptor instead.
func (*EditChannelStatusReq) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{32}
}

func (x *EditChannelStatusReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EditChannelStatusReq) GetChannelConfigId() uint64 {
	if x != nil {
		return x.ChannelConfigId
	}
	return 0
}

func (x *EditChannelStatusReq) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type EditChannelStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditChannelStatusReply) Reset() {
	*x = EditChannelStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelStatusReply) ProtoMessage() {}

func (x *EditChannelStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelStatusReply.ProtoReflect.Descriptor instead.
func (*EditChannelStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{33}
}

type AddConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddConfigReply) Reset() {
	*x = AddConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConfigReply) ProtoMessage() {}

func (x *AddConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConfigReply.ProtoReflect.Descriptor instead.
func (*AddConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{34}
}

type InstallIntegrationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InstallIntegrationReply) Reset() {
	*x = InstallIntegrationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallIntegrationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallIntegrationReply) ProtoMessage() {}

func (x *InstallIntegrationReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallIntegrationReply.ProtoReflect.Descriptor instead.
func (*InstallIntegrationReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{35}
}

type EditAccountMetaReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditAccountMetaReply) Reset() {
	*x = EditAccountMetaReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditAccountMetaReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditAccountMetaReply) ProtoMessage() {}

func (x *EditAccountMetaReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditAccountMetaReply.ProtoReflect.Descriptor instead.
func (*EditAccountMetaReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{36}
}

type EditConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditConfigReply) Reset() {
	*x = EditConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditConfigReply) ProtoMessage() {}

func (x *EditConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditConfigReply.ProtoReflect.Descriptor instead.
func (*EditConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{37}
}

type IntSendNotificationReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntSendNotificationReply) Reset() {
	*x = IntSendNotificationReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntSendNotificationReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntSendNotificationReply) ProtoMessage() {}

func (x *IntSendNotificationReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntSendNotificationReply.ProtoReflect.Descriptor instead.
func (*IntSendNotificationReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{38}
}

type IntAddAccountConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntAddAccountConfigReply) Reset() {
	*x = IntAddAccountConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntAddAccountConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntAddAccountConfigReply) ProtoMessage() {}

func (x *IntAddAccountConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntAddAccountConfigReply.ProtoReflect.Descriptor instead.
func (*IntAddAccountConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{39}
}

type IntAddUserConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntAddUserConfigReply) Reset() {
	*x = IntAddUserConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntAddUserConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntAddUserConfigReply) ProtoMessage() {}

func (x *IntAddUserConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntAddUserConfigReply.ProtoReflect.Descriptor instead.
func (*IntAddUserConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{40}
}

type EditConfigStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditConfigStatusReply) Reset() {
	*x = EditConfigStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditConfigStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditConfigStatusReply) ProtoMessage() {}

func (x *EditConfigStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditConfigStatusReply.ProtoReflect.Descriptor instead.
func (*EditConfigStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{41}
}

type IntDeleteAccountConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IntDeleteAccountConfigReply) Reset() {
	*x = IntDeleteAccountConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntDeleteAccountConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntDeleteAccountConfigReply) ProtoMessage() {}

func (x *IntDeleteAccountConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntDeleteAccountConfigReply.ProtoReflect.Descriptor instead.
func (*IntDeleteAccountConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{42}
}

type DeleteConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteConfigReply) Reset() {
	*x = DeleteConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConfigReply) ProtoMessage() {}

func (x *DeleteConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConfigReply.ProtoReflect.Descriptor instead.
func (*DeleteConfigReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{43}
}

// Telegram Bot
type AddBotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddBotReply) Reset() {
	*x = AddBotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBotReply) ProtoMessage() {}

func (x *AddBotReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBotReply.ProtoReflect.Descriptor instead.
func (*AddBotReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{44}
}

type EditBotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditBotReply) Reset() {
	*x = EditBotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotReply) ProtoMessage() {}

func (x *EditBotReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotReply.ProtoReflect.Descriptor instead.
func (*EditBotReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{45}
}

type GetBotsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConfigId uint64     `protobuf:"varint,1,opt,name=user_config_id,json=userConfigId,proto3" json:"user_config_id,omitempty"`
	BotConfigs   []*BotMeta `protobuf:"bytes,2,rep,name=BotConfigs,proto3" json:"BotConfigs,omitempty"`
}

func (x *GetBotsReply) Reset() {
	*x = GetBotsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotsReply) ProtoMessage() {}

func (x *GetBotsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotsReply.ProtoReflect.Descriptor instead.
func (*GetBotsReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{46}
}

func (x *GetBotsReply) GetUserConfigId() uint64 {
	if x != nil {
		return x.UserConfigId
	}
	return 0
}

func (x *GetBotsReply) GetBotConfigs() []*BotMeta {
	if x != nil {
		return x.BotConfigs
	}
	return nil
}

type BotMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BotConfigId    uint64 `protobuf:"varint,1,opt,name=BotConfigId,proto3" json:"BotConfigId,omitempty"`
	BotName        string `protobuf:"bytes,2,opt,name=BotName,proto3" json:"BotName,omitempty"`
	BotDescription string `protobuf:"bytes,3,opt,name=BotDescription,proto3" json:"BotDescription,omitempty"`
	BotToken       string `protobuf:"bytes,4,opt,name=BotToken,proto3" json:"BotToken,omitempty"`
	Enabled        bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *BotMeta) Reset() {
	*x = BotMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BotMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BotMeta) ProtoMessage() {}

func (x *BotMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BotMeta.ProtoReflect.Descriptor instead.
func (*BotMeta) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{47}
}

func (x *BotMeta) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *BotMeta) GetBotName() string {
	if x != nil {
		return x.BotName
	}
	return ""
}

func (x *BotMeta) GetBotDescription() string {
	if x != nil {
		return x.BotDescription
	}
	return ""
}

func (x *BotMeta) GetBotToken() string {
	if x != nil {
		return x.BotToken
	}
	return ""
}

func (x *BotMeta) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type EditBotStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditBotStatusReply) Reset() {
	*x = EditBotStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotStatusReply) ProtoMessage() {}

func (x *EditBotStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotStatusReply.ProtoReflect.Descriptor instead.
func (*EditBotStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{48}
}

type DeleteBotReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBotReply) Reset() {
	*x = DeleteBotReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBotReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBotReply) ProtoMessage() {}

func (x *DeleteBotReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBotReply.ProtoReflect.Descriptor instead.
func (*DeleteBotReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{49}
}

// TG channel
type AddChannelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddChannelReply) Reset() {
	*x = AddChannelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChannelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChannelReply) ProtoMessage() {}

func (x *AddChannelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChannelReply.ProtoReflect.Descriptor instead.
func (*AddChannelReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{50}
}

type EditChannelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditChannelReply) Reset() {
	*x = EditChannelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditChannelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditChannelReply) ProtoMessage() {}

func (x *EditChannelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditChannelReply.ProtoReflect.Descriptor instead.
func (*EditChannelReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{51}
}

type GetChannelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserConfigId  uint64           `protobuf:"varint,1,opt,name=user_config_id,json=userConfigId,proto3" json:"user_config_id,omitempty"`
	ChannelConfig []*ChannelConfig `protobuf:"bytes,2,rep,name=channel_config,json=channelConfig,proto3" json:"channel_config,omitempty"`
}

func (x *GetChannelReply) Reset() {
	*x = GetChannelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelReply) ProtoMessage() {}

func (x *GetChannelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelReply.ProtoReflect.Descriptor instead.
func (*GetChannelReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{52}
}

func (x *GetChannelReply) GetUserConfigId() uint64 {
	if x != nil {
		return x.UserConfigId
	}
	return 0
}

func (x *GetChannelReply) GetChannelConfig() []*ChannelConfig {
	if x != nil {
		return x.ChannelConfig
	}
	return nil
}

type ChannelConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelConfigId    uint64 `protobuf:"varint,1,opt,name=channel_config_id,json=channelConfigId,proto3" json:"channel_config_id,omitempty"`
	ChannelName        string `protobuf:"bytes,2,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelDescription string `protobuf:"bytes,3,opt,name=channel_description,json=channelDescription,proto3" json:"channel_description,omitempty"`
	ChannelId          string `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Enabled            bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *ChannelConfig) Reset() {
	*x = ChannelConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelConfig) ProtoMessage() {}

func (x *ChannelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelConfig.ProtoReflect.Descriptor instead.
func (*ChannelConfig) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{53}
}

func (x *ChannelConfig) GetChannelConfigId() uint64 {
	if x != nil {
		return x.ChannelConfigId
	}
	return 0
}

func (x *ChannelConfig) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *ChannelConfig) GetChannelDescription() string {
	if x != nil {
		return x.ChannelDescription
	}
	return ""
}

func (x *ChannelConfig) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type DeleteChannelReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteChannelReply) Reset() {
	*x = DeleteChannelReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteChannelReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelReply) ProtoMessage() {}

func (x *DeleteChannelReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelReply.ProtoReflect.Descriptor instead.
func (*DeleteChannelReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{54}
}

// TG Notification Config
type GetBotEventConfigsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId              string                `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BotConfigId         uint64                `protobuf:"varint,2,opt,name=bot_config_id,json=botConfigId,proto3" json:"bot_config_id,omitempty"`
	NotificationConfigs []*NotificationConfig `protobuf:"bytes,3,rep,name=notification_configs,json=notificationConfigs,proto3" json:"notification_configs,omitempty"`
}

func (x *GetBotEventConfigsReply) Reset() {
	*x = GetBotEventConfigsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotEventConfigsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotEventConfigsReply) ProtoMessage() {}

func (x *GetBotEventConfigsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotEventConfigsReply.ProtoReflect.Descriptor instead.
func (*GetBotEventConfigsReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{55}
}

func (x *GetBotEventConfigsReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBotEventConfigsReply) GetBotConfigId() uint64 {
	if x != nil {
		return x.BotConfigId
	}
	return 0
}

func (x *GetBotEventConfigsReply) GetNotificationConfigs() []*NotificationConfig {
	if x != nil {
		return x.NotificationConfigs
	}
	return nil
}

type GetBotEventDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AccountBlockList   []*AccountMeta      `protobuf:"bytes,2,rep,name=account_block_list,json=accountBlockList,proto3" json:"account_block_list,omitempty"`
	AccountEnabledList []*AccountMeta      `protobuf:"bytes,3,rep,name=account_enabled_list,json=accountEnabledList,proto3" json:"account_enabled_list,omitempty"`
	ChannelBlockList   []*ChannelMeta      `protobuf:"bytes,4,rep,name=channel_block_list,json=channelBlockList,proto3" json:"channel_block_list,omitempty"`
	ChannelEnabledList []*ChannelMeta      `protobuf:"bytes,5,rep,name=channel_enabled_list,json=channelEnabledList,proto3" json:"channel_enabled_list,omitempty"`
	NotificationConfig *NotificationConfig `protobuf:"bytes,6,opt,name=notification_config,json=notificationConfig,proto3" json:"notification_config,omitempty"`
}

func (x *GetBotEventDetailsReply) Reset() {
	*x = GetBotEventDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBotEventDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBotEventDetailsReply) ProtoMessage() {}

func (x *GetBotEventDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBotEventDetailsReply.ProtoReflect.Descriptor instead.
func (*GetBotEventDetailsReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{56}
}

func (x *GetBotEventDetailsReply) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBotEventDetailsReply) GetAccountBlockList() []*AccountMeta {
	if x != nil {
		return x.AccountBlockList
	}
	return nil
}

func (x *GetBotEventDetailsReply) GetAccountEnabledList() []*AccountMeta {
	if x != nil {
		return x.AccountEnabledList
	}
	return nil
}

func (x *GetBotEventDetailsReply) GetChannelBlockList() []*ChannelMeta {
	if x != nil {
		return x.ChannelBlockList
	}
	return nil
}

func (x *GetBotEventDetailsReply) GetChannelEnabledList() []*ChannelMeta {
	if x != nil {
		return x.ChannelEnabledList
	}
	return nil
}

func (x *GetBotEventDetailsReply) GetNotificationConfig() *NotificationConfig {
	if x != nil {
		return x.NotificationConfig
	}
	return nil
}

type EditBotEventDetailsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditBotEventDetailsReply) Reset() {
	*x = EditBotEventDetailsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotEventDetailsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotEventDetailsReply) ProtoMessage() {}

func (x *EditBotEventDetailsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotEventDetailsReply.ProtoReflect.Descriptor instead.
func (*EditBotEventDetailsReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{57}
}

type EditBotEventStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditBotEventStatusReply) Reset() {
	*x = EditBotEventStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_notification_manager_notification_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditBotEventStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditBotEventStatusReply) ProtoMessage() {}

func (x *EditBotEventStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notification_manager_notification_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditBotEventStatusReply.ProtoReflect.Descriptor instead.
func (*EditBotEventStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_notification_manager_notification_proto_rawDescGZIP(), []int{58}
}

var File_proto_notification_manager_notification_proto protoreflect.FileDescriptor

var file_proto_notification_manager_notification_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1b, 0x0a,
	0x19, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x9d, 0x01, 0x0a, 0x13, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x73, 0x0a, 0x10, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xf4, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x88, 0x02, 0x0a, 0x0d, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x0c, 0x75, 0x6e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0b, 0x75, 0x6e, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x7b, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0xe5,
	0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x37, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x46, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x0e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x59, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xaf, 0x02, 0x0a, 0x12, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64,
	0x22, 0x2f, 0x0a, 0x14, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x9f, 0x02, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0xc8, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x52, 0x0a, 0x11, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xda,
	0x01, 0x0a, 0x19, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xaa, 0x01, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x52, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x94, 0x01, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x78, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0xc8, 0x01, 0x0a, 0x0e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x81,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf7,
	0x03, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x4e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x10, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x15, 0x45, 0x64, 0x69, 0x74, 0x42,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x16, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x11,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x75, 0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x10, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16,
	0x0a, 0x14, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x0a, 0x18, 0x49, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x0a, 0x15, 0x45, 0x64,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x42, 0x6f,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x72, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0a,
	0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a,
	0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x07, 0x42,
	0x6f, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x42, 0x6f, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6f, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x42, 0x6f, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x42, 0x6f, 0x74, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x6f,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x6f, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x45,
	0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x82, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x0e, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0xc8, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22,
	0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xb2, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6f,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x64, 0x12, 0x5a,
	0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0xd4, 0x03, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x4e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x10, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x52, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x10, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x14, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x12, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0x1a, 0x0a, 0x18, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x0a,
	0x17, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0xd1, 0x02, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x43, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x45, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52,
	0x5f, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x43,
	0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x4d, 0x4f, 0x44, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x09,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x44, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x43, 0x4f,
	0x50, 0x49, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x4c,
	0x59, 0x10, 0x0b, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x4d, 0x4f, 0x44,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c,
	0x4c, 0x59, 0x10, 0x0c, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x43, 0x4f,
	0x50, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x0d, 0x2a, 0xc9, 0x02, 0x0a,
	0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x50, 0x49,
	0x45, 0x52, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x43,
	0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45, 0x10, 0x06, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x07, 0x12, 0x0f,
	0x0a, 0x0b, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x52, 0x49, 0x53, 0x4b, 0x10, 0x08, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x50,
	0x49, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x49, 0x43, 0x4b, 0x45, 0x54,
	0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x53,
	0x54, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13,
	0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f, 0x53, 0x4c, 0x41, 0x56, 0x45, 0x5f, 0x53, 0x59, 0x4d,
	0x42, 0x4f, 0x4c, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x50, 0x49, 0x45, 0x52, 0x5f,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0d, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x0e, 0x2a, 0x51, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x45, 0x4c, 0x45, 0x47,
	0x52, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x52, 0x44,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x0c, 0x0a,
	0x08, 0x57, 0x48, 0x41, 0x54, 0x53, 0x41, 0x50, 0x50, 0x10, 0x04, 0x32, 0xec, 0x12, 0x0a, 0x13,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x70, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x23, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0a, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x23, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6a, 0x0a,
	0x10, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x06, 0x41, 0x64, 0x64,
	0x42, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x07, 0x45, 0x64, 0x69, 0x74, 0x42,
	0x6f, 0x74, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0d, 0x45, 0x64, 0x69,
	0x74, 0x42, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x23, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x11, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x2a, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x13, 0x45,
	0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x70, 0x0a, 0x12, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x42, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x76, 0x0a, 0x14, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x55, 0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55,
	0x6e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xc4, 0x03, 0x0a, 0x08, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x6c, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x2d,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x62, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2e, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_notification_manager_notification_proto_rawDescOnce sync.Once
	file_proto_notification_manager_notification_proto_rawDescData = file_proto_notification_manager_notification_proto_rawDesc
)

func file_proto_notification_manager_notification_proto_rawDescGZIP() []byte {
	file_proto_notification_manager_notification_proto_rawDescOnce.Do(func() {
		file_proto_notification_manager_notification_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_notification_manager_notification_proto_rawDescData)
	})
	return file_proto_notification_manager_notification_proto_rawDescData
}

var file_proto_notification_manager_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_notification_manager_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_proto_notification_manager_notification_proto_goTypes = []interface{}{
	(EventType)(0),                      // 0: notificationmanager.EventType
	(NotificationDataKeys)(0),           // 1: notificationmanager.NotificationDataKeys
	(NotificationType)(0),               // 2: notificationmanager.NotificationType
	(*UninstallIntegrationReq)(nil),     // 3: notificationmanager.UninstallIntegrationReq
	(*UninstallIntegrationReply)(nil),   // 4: notificationmanager.UninstallIntegrationReply
	(*EditConfigStatusReq)(nil),         // 5: notificationmanager.EditConfigStatusReq
	(*ConfigDetailsReq)(nil),            // 6: notificationmanager.ConfigDetailsReq
	(*ConfigDetailsReply)(nil),          // 7: notificationmanager.ConfigDetailsReply
	(*EditConfigReq)(nil),               // 8: notificationmanager.EditConfigReq
	(*AccountMeta)(nil),                 // 9: notificationmanager.AccountMeta
	(*NotificationReq)(nil),             // 10: notificationmanager.NotificationReq
	(*UserMetaReq)(nil),                 // 11: notificationmanager.UserMetaReq
	(*AccountMetaReq)(nil),              // 12: notificationmanager.AccountMetaReq
	(*UserConfigResp)(nil),              // 13: notificationmanager.UserConfigResp
	(*NotificationConfig)(nil),          // 14: notificationmanager.NotificationConfig
	(*ConfigReq)(nil),                   // 15: notificationmanager.ConfigReq
	(*DeleteConfigReq)(nil),             // 16: notificationmanager.DeleteConfigReq
	(*IntegrationStatusReq)(nil),        // 17: notificationmanager.IntegrationStatusReq
	(*IntegrationStatusReply)(nil),      // 18: notificationmanager.IntegrationStatusReply
	(*InstallIntegrationReq)(nil),       // 19: notificationmanager.InstallIntegrationReq
	(*IntDeleteAccountConfigReq)(nil),   // 20: notificationmanager.IntDeleteAccountConfigReq
	(*AddBotReq)(nil),                   // 21: notificationmanager.AddBotReq
	(*EditBotReq)(nil),                  // 22: notificationmanager.EditBotReq
	(*GetBotsReq)(nil),                  // 23: notificationmanager.GetBotsReq
	(*EditBotStatusReq)(nil),            // 24: notificationmanager.EditBotStatusReq
	(*DeleteBotReq)(nil),                // 25: notificationmanager.DeleteBotReq
	(*AddChannelReq)(nil),               // 26: notificationmanager.AddChannelReq
	(*EditChannelReq)(nil),              // 27: notificationmanager.EditChannelReq
	(*GetChannelReq)(nil),               // 28: notificationmanager.GetChannelReq
	(*DeleteChannelReq)(nil),            // 29: notificationmanager.DeleteChannelReq
	(*GetBotEventConfigsReq)(nil),       // 30: notificationmanager.GetBotEventConfigsReq
	(*GetBotEventDetailsReq)(nil),       // 31: notificationmanager.GetBotEventDetailsReq
	(*EditBotEventDetailsReq)(nil),      // 32: notificationmanager.EditBotEventDetailsReq
	(*ChannelMeta)(nil),                 // 33: notificationmanager.ChannelMeta
	(*EditBotEventStatusReq)(nil),       // 34: notificationmanager.EditBotEventStatusReq
	(*EditChannelStatusReq)(nil),        // 35: notificationmanager.EditChannelStatusReq
	(*EditChannelStatusReply)(nil),      // 36: notificationmanager.EditChannelStatusReply
	(*AddConfigReply)(nil),              // 37: notificationmanager.AddConfigReply
	(*InstallIntegrationReply)(nil),     // 38: notificationmanager.InstallIntegrationReply
	(*EditAccountMetaReply)(nil),        // 39: notificationmanager.EditAccountMetaReply
	(*EditConfigReply)(nil),             // 40: notificationmanager.EditConfigReply
	(*IntSendNotificationReply)(nil),    // 41: notificationmanager.IntSendNotificationReply
	(*IntAddAccountConfigReply)(nil),    // 42: notificationmanager.IntAddAccountConfigReply
	(*IntAddUserConfigReply)(nil),       // 43: notificationmanager.IntAddUserConfigReply
	(*EditConfigStatusReply)(nil),       // 44: notificationmanager.EditConfigStatusReply
	(*IntDeleteAccountConfigReply)(nil), // 45: notificationmanager.IntDeleteAccountConfigReply
	(*DeleteConfigReply)(nil),           // 46: notificationmanager.DeleteConfigReply
	(*AddBotReply)(nil),                 // 47: notificationmanager.AddBotReply
	(*EditBotReply)(nil),                // 48: notificationmanager.EditBotReply
	(*GetBotsReply)(nil),                // 49: notificationmanager.GetBotsReply
	(*BotMeta)(nil),                     // 50: notificationmanager.BotMeta
	(*EditBotStatusReply)(nil),          // 51: notificationmanager.EditBotStatusReply
	(*DeleteBotReply)(nil),              // 52: notificationmanager.DeleteBotReply
	(*AddChannelReply)(nil),             // 53: notificationmanager.AddChannelReply
	(*EditChannelReply)(nil),            // 54: notificationmanager.EditChannelReply
	(*GetChannelReply)(nil),             // 55: notificationmanager.GetChannelReply
	(*ChannelConfig)(nil),               // 56: notificationmanager.ChannelConfig
	(*DeleteChannelReply)(nil),          // 57: notificationmanager.DeleteChannelReply
	(*GetBotEventConfigsReply)(nil),     // 58: notificationmanager.GetBotEventConfigsReply
	(*GetBotEventDetailsReply)(nil),     // 59: notificationmanager.GetBotEventDetailsReply
	(*EditBotEventDetailsReply)(nil),    // 60: notificationmanager.EditBotEventDetailsReply
	(*EditBotEventStatusReply)(nil),     // 61: notificationmanager.EditBotEventStatusReply
	nil,                                 // 62: notificationmanager.NotificationReq.DataEntry
	nil,                                 // 63: notificationmanager.IntDeleteAccountConfigReq.DataEntry
}
var file_proto_notification_manager_notification_proto_depIdxs = []int32{
	2,  // 0: notificationmanager.UninstallIntegrationReq.notification_type:type_name -> notificationmanager.NotificationType
	9,  // 1: notificationmanager.ConfigDetailsReply.block_list:type_name -> notificationmanager.AccountMeta
	9,  // 2: notificationmanager.ConfigDetailsReply.enabled_list:type_name -> notificationmanager.AccountMeta
	14, // 3: notificationmanager.ConfigDetailsReply.notification_config:type_name -> notificationmanager.NotificationConfig
	9,  // 4: notificationmanager.EditConfigReq.block_list:type_name -> notificationmanager.AccountMeta
	9,  // 5: notificationmanager.EditConfigReq.unblock_list:type_name -> notificationmanager.AccountMeta
	14, // 6: notificationmanager.EditConfigReq.notification_config:type_name -> notificationmanager.NotificationConfig
	62, // 7: notificationmanager.NotificationReq.data:type_name -> notificationmanager.NotificationReq.DataEntry
	12, // 8: notificationmanager.UserMetaReq.account_meta:type_name -> notificationmanager.AccountMetaReq
	14, // 9: notificationmanager.UserConfigResp.NotificationConfigs:type_name -> notificationmanager.NotificationConfig
	2,  // 10: notificationmanager.InstallIntegrationReq.notification_type:type_name -> notificationmanager.NotificationType
	63, // 11: notificationmanager.IntDeleteAccountConfigReq.data:type_name -> notificationmanager.IntDeleteAccountConfigReq.DataEntry
	9,  // 12: notificationmanager.EditBotEventDetailsReq.account_block_list:type_name -> notificationmanager.AccountMeta
	9,  // 13: notificationmanager.EditBotEventDetailsReq.account_enabled_list:type_name -> notificationmanager.AccountMeta
	33, // 14: notificationmanager.EditBotEventDetailsReq.channel_block_list:type_name -> notificationmanager.ChannelMeta
	33, // 15: notificationmanager.EditBotEventDetailsReq.channel_enabled_list:type_name -> notificationmanager.ChannelMeta
	14, // 16: notificationmanager.EditBotEventDetailsReq.notification_config:type_name -> notificationmanager.NotificationConfig
	2,  // 17: notificationmanager.EditBotEventStatusReq.notification_type:type_name -> notificationmanager.NotificationType
	50, // 18: notificationmanager.GetBotsReply.BotConfigs:type_name -> notificationmanager.BotMeta
	56, // 19: notificationmanager.GetChannelReply.channel_config:type_name -> notificationmanager.ChannelConfig
	14, // 20: notificationmanager.GetBotEventConfigsReply.notification_configs:type_name -> notificationmanager.NotificationConfig
	9,  // 21: notificationmanager.GetBotEventDetailsReply.account_block_list:type_name -> notificationmanager.AccountMeta
	9,  // 22: notificationmanager.GetBotEventDetailsReply.account_enabled_list:type_name -> notificationmanager.AccountMeta
	33, // 23: notificationmanager.GetBotEventDetailsReply.channel_block_list:type_name -> notificationmanager.ChannelMeta
	33, // 24: notificationmanager.GetBotEventDetailsReply.channel_enabled_list:type_name -> notificationmanager.ChannelMeta
	14, // 25: notificationmanager.GetBotEventDetailsReply.notification_config:type_name -> notificationmanager.NotificationConfig
	17, // 26: notificationmanager.NotificationManager.GetIntegrationStatus:input_type -> notificationmanager.IntegrationStatusReq
	19, // 27: notificationmanager.NotificationManager.InstallIntegration:input_type -> notificationmanager.InstallIntegrationReq
	14, // 28: notificationmanager.NotificationManager.AddConfig:input_type -> notificationmanager.NotificationConfig
	8,  // 29: notificationmanager.NotificationManager.EditConfig:input_type -> notificationmanager.EditConfigReq
	15, // 30: notificationmanager.NotificationManager.GetConfig:input_type -> notificationmanager.ConfigReq
	6,  // 31: notificationmanager.NotificationManager.GetConfigDetails:input_type -> notificationmanager.ConfigDetailsReq
	16, // 32: notificationmanager.NotificationManager.DeleteConfig:input_type -> notificationmanager.DeleteConfigReq
	12, // 33: notificationmanager.NotificationManager.EditAccountMeta:input_type -> notificationmanager.AccountMetaReq
	5,  // 34: notificationmanager.NotificationManager.EditConfigStatus:input_type -> notificationmanager.EditConfigStatusReq
	21, // 35: notificationmanager.NotificationManager.AddBot:input_type -> notificationmanager.AddBotReq
	22, // 36: notificationmanager.NotificationManager.EditBot:input_type -> notificationmanager.EditBotReq
	23, // 37: notificationmanager.NotificationManager.GetBots:input_type -> notificationmanager.GetBotsReq
	24, // 38: notificationmanager.NotificationManager.EditBotStatus:input_type -> notificationmanager.EditBotStatusReq
	25, // 39: notificationmanager.NotificationManager.DeleteBots:input_type -> notificationmanager.DeleteBotReq
	26, // 40: notificationmanager.NotificationManager.AddChannel:input_type -> notificationmanager.AddChannelReq
	27, // 41: notificationmanager.NotificationManager.EditChannel:input_type -> notificationmanager.EditChannelReq
	28, // 42: notificationmanager.NotificationManager.GetChannel:input_type -> notificationmanager.GetChannelReq
	35, // 43: notificationmanager.NotificationManager.EditChannelStatus:input_type -> notificationmanager.EditChannelStatusReq
	29, // 44: notificationmanager.NotificationManager.DeleteChannel:input_type -> notificationmanager.DeleteChannelReq
	30, // 45: notificationmanager.NotificationManager.GetBotEventConfigs:input_type -> notificationmanager.GetBotEventConfigsReq
	31, // 46: notificationmanager.NotificationManager.GetBotEventDetails:input_type -> notificationmanager.GetBotEventDetailsReq
	32, // 47: notificationmanager.NotificationManager.EditBotEventDetails:input_type -> notificationmanager.EditBotEventDetailsReq
	34, // 48: notificationmanager.NotificationManager.EditBotEventStatus:input_type -> notificationmanager.EditBotEventStatusReq
	3,  // 49: notificationmanager.NotificationManager.UninstallIntegration:input_type -> notificationmanager.UninstallIntegrationReq
	10, // 50: notificationmanager.Internal.IntSendNotification:input_type -> notificationmanager.NotificationReq
	11, // 51: notificationmanager.Internal.IntAddAccountConfig:input_type -> notificationmanager.UserMetaReq
	11, // 52: notificationmanager.Internal.IntAddUserConfig:input_type -> notificationmanager.UserMetaReq
	20, // 53: notificationmanager.Internal.IntDeleteAccountConfig:input_type -> notificationmanager.IntDeleteAccountConfigReq
	18, // 54: notificationmanager.NotificationManager.GetIntegrationStatus:output_type -> notificationmanager.IntegrationStatusReply
	38, // 55: notificationmanager.NotificationManager.InstallIntegration:output_type -> notificationmanager.InstallIntegrationReply
	37, // 56: notificationmanager.NotificationManager.AddConfig:output_type -> notificationmanager.AddConfigReply
	40, // 57: notificationmanager.NotificationManager.EditConfig:output_type -> notificationmanager.EditConfigReply
	13, // 58: notificationmanager.NotificationManager.GetConfig:output_type -> notificationmanager.UserConfigResp
	7,  // 59: notificationmanager.NotificationManager.GetConfigDetails:output_type -> notificationmanager.ConfigDetailsReply
	46, // 60: notificationmanager.NotificationManager.DeleteConfig:output_type -> notificationmanager.DeleteConfigReply
	39, // 61: notificationmanager.NotificationManager.EditAccountMeta:output_type -> notificationmanager.EditAccountMetaReply
	44, // 62: notificationmanager.NotificationManager.EditConfigStatus:output_type -> notificationmanager.EditConfigStatusReply
	47, // 63: notificationmanager.NotificationManager.AddBot:output_type -> notificationmanager.AddBotReply
	48, // 64: notificationmanager.NotificationManager.EditBot:output_type -> notificationmanager.EditBotReply
	49, // 65: notificationmanager.NotificationManager.GetBots:output_type -> notificationmanager.GetBotsReply
	51, // 66: notificationmanager.NotificationManager.EditBotStatus:output_type -> notificationmanager.EditBotStatusReply
	52, // 67: notificationmanager.NotificationManager.DeleteBots:output_type -> notificationmanager.DeleteBotReply
	53, // 68: notificationmanager.NotificationManager.AddChannel:output_type -> notificationmanager.AddChannelReply
	54, // 69: notificationmanager.NotificationManager.EditChannel:output_type -> notificationmanager.EditChannelReply
	55, // 70: notificationmanager.NotificationManager.GetChannel:output_type -> notificationmanager.GetChannelReply
	36, // 71: notificationmanager.NotificationManager.EditChannelStatus:output_type -> notificationmanager.EditChannelStatusReply
	57, // 72: notificationmanager.NotificationManager.DeleteChannel:output_type -> notificationmanager.DeleteChannelReply
	58, // 73: notificationmanager.NotificationManager.GetBotEventConfigs:output_type -> notificationmanager.GetBotEventConfigsReply
	59, // 74: notificationmanager.NotificationManager.GetBotEventDetails:output_type -> notificationmanager.GetBotEventDetailsReply
	60, // 75: notificationmanager.NotificationManager.EditBotEventDetails:output_type -> notificationmanager.EditBotEventDetailsReply
	61, // 76: notificationmanager.NotificationManager.EditBotEventStatus:output_type -> notificationmanager.EditBotEventStatusReply
	4,  // 77: notificationmanager.NotificationManager.UninstallIntegration:output_type -> notificationmanager.UninstallIntegrationReply
	41, // 78: notificationmanager.Internal.IntSendNotification:output_type -> notificationmanager.IntSendNotificationReply
	42, // 79: notificationmanager.Internal.IntAddAccountConfig:output_type -> notificationmanager.IntAddAccountConfigReply
	43, // 80: notificationmanager.Internal.IntAddUserConfig:output_type -> notificationmanager.IntAddUserConfigReply
	45, // 81: notificationmanager.Internal.IntDeleteAccountConfig:output_type -> notificationmanager.IntDeleteAccountConfigReply
	54, // [54:82] is the sub-list for method output_type
	26, // [26:54] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_proto_notification_manager_notification_proto_init() }
func file_proto_notification_manager_notification_proto_init() {
	if File_proto_notification_manager_notification_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_notification_manager_notification_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UninstallIntegrationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditConfigStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountMetaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserConfigResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallIntegrationReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntDeleteAccountConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotEventConfigsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotEventDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotEventDetailsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotEventStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallIntegrationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditAccountMetaReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntSendNotificationReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntAddAccountConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntAddUserConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditConfigStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntDeleteAccountConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BotMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBotReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChannelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditChannelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteChannelReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotEventConfigsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBotEventDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotEventDetailsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_notification_manager_notification_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditBotEventStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_notification_manager_notification_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_notification_manager_notification_proto_goTypes,
		DependencyIndexes: file_proto_notification_manager_notification_proto_depIdxs,
		EnumInfos:         file_proto_notification_manager_notification_proto_enumTypes,
		MessageInfos:      file_proto_notification_manager_notification_proto_msgTypes,
	}.Build()
	File_proto_notification_manager_notification_proto = out.File
	file_proto_notification_manager_notification_proto_rawDesc = nil
	file_proto_notification_manager_notification_proto_goTypes = nil
	file_proto_notification_manager_notification_proto_depIdxs = nil
}
